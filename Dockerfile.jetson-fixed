# Dockerfile for YOLOv11 Seed Detection on Jetson Nano
# Specifically designed to handle GPG key issues and repository problems

FROM nvcr.io/nvidia/l4t-pytorch:r32.7.1-pth1.10-py3

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV QT_X11_NO_MITSHM=1
ENV DISPLAY=:0

# Set working directory
WORKDIR /app

# Fix repository and GPG key issues first
RUN apt-get update || true && \
    # Remove all problematic repository files
    rm -f /etc/apt/sources.list.d/kitware*.list* && \
    rm -f /etc/apt/sources.list.d/nvidia-l4t-apt-source.list.disabled && \
    rm -f /etc/apt/sources.list.d/*cuda*.list* && \
    # Clean up any corrupt package cache
    rm -rf /var/lib/apt/lists/* && \
    apt-get clean && \
    # Update package cache with remaining repositories
    apt-get update

# Install essential system dependencies in stages
RUN apt-get install -y --no-install-recommends \
    ca-certificates \
    gnupg \
    wget \
    curl

# Install Python and basic development tools
RUN apt-get install -y --no-install-recommends \
    python3-pip \
    python3-dev \
    python3-setuptools \
    build-essential \
    cmake \
    pkg-config

# Install OpenCV and GStreamer dependencies
RUN apt-get install -y --no-install-recommends \
    libopencv-dev \
    python3-opencv \
    libgstreamer1.0-dev \
    libgstreamer-plugins-base1.0-dev \
    gstreamer1.0-plugins-base \
    gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad \
    gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav \
    gstreamer1.0-tools

# Install display and GUI dependencies
RUN apt-get install -y --no-install-recommends \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    qtbase5-dev \
    x11-apps

# Install camera and hardware utilities
RUN apt-get install -y --no-install-recommends \
    v4l-utils \
    udev \
    && rm -rf /var/lib/apt/lists/* /var/cache/apt/archives/*

# Upgrade pip and install essential Python packages
RUN python3 -m pip install --upgrade pip setuptools wheel

# Install PyTorch-related dependencies first (they're already in the base image)
RUN pip3 install --no-cache-dir \
    numpy \
    opencv-python \
    pillow

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip3 install --no-cache-dir -r requirements.txt

# Install Jetson-specific packages with error handling
RUN pip3 install --no-cache-dir --ignore-installed \
    pycuda || echo "PyCUDA installation failed, continuing..." && \
    pip3 install --no-cache-dir \
    jetson-stats || echo "jetson-stats installation failed, continuing..." && \
    pip3 install --no-cache-dir \
    pyserial

# Copy application files
COPY . .

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/models

# Set permissions
RUN chmod +x *.py
RUN find . -name "*.sh" -type f -exec chmod +x {} \;

# Create a non-root user for security
RUN useradd -m -u 1000 jetson && \
    chown -R jetson:jetson /app
USER jetson

# Health check that doesn't fail the build
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python3 -c "import sys; print('Python OK:', sys.version)" || exit 1

# Default command
CMD ["python3", "app.py"]

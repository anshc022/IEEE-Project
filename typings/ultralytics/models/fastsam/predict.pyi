"""
This type stub file was generated by pyright.
"""

from ultralytics.models.yolo.segment import SegmentationPredictor

class FastSAMPredictor(SegmentationPredictor):
    """
    FastSAMPredictor is specialized for fast SAM (Segment Anything Model) segmentation prediction tasks in Ultralytics
    YOLO framework.

    This class extends the SegmentationPredictor, customizing the prediction pipeline specifically for fast SAM. It
    adjusts post-processing steps to incorporate mask prediction and non-max suppression while optimizing for single-
    class segmentation.
    """
    def __init__(self, cfg=..., overrides=..., _callbacks=...) -> None:
        """Initializes a FastSAMPredictor for fast SAM segmentation tasks in Ultralytics YOLO framework."""
        ...
    
    def postprocess(self, preds, img, orig_imgs): # -> list[Any]:
        """Applies box postprocess for FastSAM predictions."""
        ...
    
    def prompt(self, results, bboxes=..., points=..., labels=..., texts=...): # -> list[Any]:
        """
        Internal function for image segmentation inference based on cues like bounding boxes, points, and masks.
        Leverages SAM's specialized architecture for prompt-based, real-time segmentation.

        Args:
            results (Results | List[Results]): The original inference results from FastSAM models without any prompts.
            bboxes (np.ndarray | List, optional): Bounding boxes with shape (N, 4), in XYXY format.
            points (np.ndarray | List, optional): Points indicating object locations with shape (N, 2), in pixels.
            labels (np.ndarray | List, optional): Labels for point prompts, shape (N, ). 1 = foreground, 0 = background.
            texts (str | List[str], optional): Textual prompts, a list contains string objects.

        Returns:
            (List[Results]): The output results determined by prompts.
        """
        ...
    
    def set_prompts(self, prompts): # -> None:
        """Set prompts in advance."""
        ...
    



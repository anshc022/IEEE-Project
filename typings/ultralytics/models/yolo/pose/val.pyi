"""
This type stub file was generated by pyright.
"""

from ultralytics.models.yolo.detect import DetectionValidator

class PoseValidator(DetectionValidator):
    """
    A class extending the DetectionValidator class for validation based on a pose model.

    Example:
        ```python
        from ultralytics.models.yolo.pose import PoseValidator

        args = dict(model="yolo11n-pose.pt", data="coco8-pose.yaml")
        validator = PoseValidator(args=args)
        validator()
        ```
    """
    def __init__(self, dataloader=..., save_dir=..., pbar=..., args=..., _callbacks=...) -> None:
        """Initialize a 'PoseValidator' object with custom parameters and assigned attributes."""
        ...
    
    def preprocess(self, batch):
        """Preprocesses the batch by converting the 'keypoints' data into a float and moving it to the device."""
        ...
    
    def get_desc(self): # -> LiteralString:
        """Returns description of evaluation metrics in string format."""
        ...
    
    def init_metrics(self, model): # -> None:
        """Initiate pose estimation metrics for YOLO model."""
        ...
    
    def update_metrics(self, preds, batch): # -> None:
        """Metrics."""
        ...
    
    def plot_val_samples(self, batch, ni): # -> None:
        """Plots and saves validation set samples with predicted bounding boxes and keypoints."""
        ...
    
    def plot_predictions(self, batch, preds, ni): # -> None:
        """Plots predictions for YOLO model."""
        ...
    
    def save_one_txt(self, predn, pred_kpts, save_conf, shape, file): # -> None:
        """Save YOLO detections to a txt file in normalized coordinates in a specific format."""
        ...
    
    def pred_to_json(self, predn, filename): # -> None:
        """Converts YOLO predictions to COCO JSON format."""
        ...
    
    def eval_json(self, stats):
        """Evaluates object detection model using COCO JSON format."""
        ...
    


